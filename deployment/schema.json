{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://plugins.dprint.dev/dprint/dprint-plugin-biome/0.0.0/schema.json",
  "type": "object",
  "definitions": {
    "indentWidth": {
      "description": "The number of characters for an indent.",
      "default": 2,
      "type": "number"
    },
    "indentStyle": {
      "description": "Whether to use tabs or spaces.",
      "type": "string",
      "default": "tab",
      "oneOf": [{
        "const": "tab",
        "description": "Use tabs."
      }, {
        "const": "space",
        "description": "Use spaces."
      }]
    },
    "lineWidth": {
      "description": "How many characters can be written on a single line.",
      "default": 80,
      "type": "number"
    },
    "quoteStyle": {
      "description": "The type of quote used when representing string literals.",
      "type": "string",
      "default": "double",
      "oneOf": [{
        "const": "double",
        "description": "Use double quotes."
      }, {
        "const": "single",
        "description": "Use single quotes"
      }]
    }
  },
  "properties": {
    "lineEnding": {
      "description": "The kind of line ending.",
      "type": "string",
      "default": "lf",
      "oneOf": [{
        "const": "lf",
        "description": "Line feed."
      }, {
        "const": "crlf",
        "description": "Carriage return, line feed."
      }, {
        "const": "cr",
        "description": "Carriage return."
      }]
    },
    "indentWidth": {
      "$ref": "#/definitions/indentWidth"
    },
    "indentStyle": {
      "$ref": "#/definitions/indentStyle"
    },
    "semicolons": {
      "description": "Whether to use semicolons.",
      "type": "string",
      "default": "always",
      "oneOf": [{
        "const": "always",
        "description": "Semicolons are always added at the end of each statement."
      }, {
        "const": "asNeeded",
        "description": "Semicolons are added only in places where it's needed, to protect from ASI."
      }]
    },
    "lineWidth": {
      "$ref": "#/definitions/lineWidth"
    },
    "css.enabled": {
      "description": "Enable css formatting.",
      "default": false,
      "type": "boolean"
    },
    "css.indentWidth": {
      "$ref": "#/definitions/indentWidth"
    },
    "css.lineWidth": {
      "$ref": "#/definitions/lineWidth"
    },
    "css.quoteStyle": {
      "$ref": "#/definitions/quoteStyle"
    },
    "css.indentStyle": {
      "$ref": "#/definitions/indentStyle"
    },
    "javascript.indentStyle": {
      "$ref": "#/definitions/indentStyle"
    },
    "javascript.lineWidth": {
      "$ref": "#/definitions/lineWidth"
    },
    "javascript.indentWidth": {
      "$ref": "#/definitions/indentWidth"
    },
    "javascript.quoteStyle": {
      "$ref": "#/definitions/quoteStyle"
    },
    "json.indentStyle": {
      "$ref": "#/definitions/indentStyle"
    },
    "json.lineWidth": {
      "$ref": "#/definitions/lineWidth"
    },
    "json.indentWidth": {
      "$ref": "#/definitions/indentWidth"
    },
    "quoteStyle": {
      "$ref": "#/definitions/quoteStyle"
    },
    "jsxQuoteStyle": {
      "$ref": "#/definitions/quoteStyle"
    },
    "trailingCommas": {
      "description": "Print trailing commas wherever possible in multi-line comma-separated syntactic structures.",
      "type": "string",
      "default": "all",
      "oneOf": [{
        "const": "all",
        "description": "Trailing commas are always added."
      }, {
        "const": "es5",
        "description": "Trailing commas are added only in places where it's supported in ES5."
      }, {
        "const": "none",
        "description": "Trailing commas are never added."
      }]
    },
    "arrowParentheses": {
      "description": "Whether to add non-necessary parentheses to arrow functions.",
      "type": "string",
      "default": "always",
      "oneOf": [{
        "const": "always",
        "description": "Parentheses are always added."
      }, {
        "const": "asNeeded",
        "description": "Parentheses are added only when necessary."
      }]
    },
    "quoteProperties": {
      "description": "Whether property names inside objects should be quoted.",
      "type": "string",
      "default": "asNeeded",
      "oneOf": [{
        "const": "asNeeded",
        "description": "Quotes when necessary."
      }, {
        "const": "preserve",
        "description": "Maintains quotes on properties."
      }]
    },
    "bracketSameLine": {
      "description": "Place the last angle bracket in JSX tags on the same line as the last attribute.",
      "default": false,
      "type": "boolean"
    },
    "bracketSpacing": {
      "description": "Surround the inner contents of some braces with spaces.",
      "default": true,
      "type": "boolean"
    }
  }
}
